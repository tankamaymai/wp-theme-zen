{"version":3,"file":"responsive.bundle.js","mappings":"mBACA,IAAIA,EAAsB,CAAC,E,sOCA3BA,EAAoBC,EAAI,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXH,EAAoBK,EAAEF,EAAYC,KAASJ,EAAoBK,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDJ,EAAoBK,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,mrCCAlF,IAAQI,GAAOC,GAAGC,KAAVF,GACRG,EAAmCF,GAAGG,KAA9BC,EAASF,EAATE,UAAWC,EAAWH,EAAXG,YACXC,EAAcN,GAAGO,QAAjBD,UACRE,EAA6CR,GAAGS,YAAxCC,EAAiBF,EAAjBE,kBAAmBC,EAAaH,EAAbG,cAC3BC,EAAqCZ,GAAGa,WAAhCC,EAASF,EAATE,UAAWC,EAAaH,EAAbG,cACXC,EAAchB,GAAGiB,MAAjBD,UACAE,EAA+BlB,GAAGmB,QAAlCD,2BAwBRF,EACI,2BACA,uCAvBJ,SAAiCI,GAkB7B,YAjBmC,IAAxBA,EAASC,aAChBD,EAASC,WAAUC,EAAAA,EAAA,GACZF,EAASC,YAAU,IACtBE,iBAAkB,CACdC,KAAM,SACNC,QAAS,QAEbC,gBAAiB,CACbF,KAAM,SACNC,QAAS,QAEbE,gBAAiB,CACbH,KAAM,SACNC,QAAS,WAIdL,CACX,IAQA,IAAMQ,EAAqB,SAAHC,GAAgC,IAA1BC,EAASD,EAATC,UAAcC,E,qYAAKC,CAAAH,EAAAI,GACrCZ,EAA8BU,EAA9BV,WAAYa,EAAkBH,EAAlBG,cAsBdC,EAAa/B,GAAU,SAAAgC,GACzB,IAAQC,EAAuCD,EAAO,kBAA9CC,mCACR,OAAOA,EACHA,IAAuC,SAC/C,GAAG,IAEyCC,EAAyBjC,EAAY,kBAAzEkC,mCAGRjC,GAAU,WACN,IAAMkC,EAAcxC,GAAGG,KAAKsC,WAAU,WAClC,IAAMC,EAAgB1C,GAAGG,KAAKiC,OAAO,kBAAkBC,qCACnDK,GAAiBA,IAAkBP,GACnCG,EAAqBI,EAE7B,IAEA,OAAO,kBAAMF,GAAa,CAC9B,GAAG,CAACL,EAAYG,IAGhB,IAOMK,EAAmB,CACrBC,QACoB,YAAfT,GAA4D,SAAhCd,EAAWE,kBACxB,WAAfY,GAA0D,SAA/Bd,EAAWK,iBACvB,WAAfS,GAA0D,SAA/Bd,EAAWM,gBACvC,GAAM,GAGd,OACIkB,MAAAC,cAAAD,MAAAE,SAAA,KACIF,MAAAC,cAAA,OAAKE,MAAOL,GACRE,MAAAC,cAAChB,EAAcC,IAGnBc,MAAAC,cAACpC,EAAiB,KACdmC,MAAAC,cAAChC,EAAS,CACNmC,MACIJ,MAAAC,cAAAD,MAAAE,SAAA,KACIF,MAAAC,cAAA,OACII,IAAG,GAAAC,OAAKC,YAAYC,SAAQ,oBAC5BC,IAAI,MACJN,MAAO,CAAEO,MAAO,OAAQC,OAAQ,OAAQC,YAAa,SAExD1D,GAAG,WAAY,oBAGxB2D,aAAa,GAEZ,CAAC,UAAW,SAAU,UAAUC,KAAI,SAAAC,GAAM,OACvCf,MAAAC,cAAC/B,EAAa,CACV3B,IAAKwE,EACLC,MAAK,GAAAV,OAAKS,EAAM,OAChBE,MAAOzC,EAAW,YAAD8B,OAAaS,KAAa,OAC3CG,QAAS,CACL,CAAEF,MAAO,KAAMC,MAAO,QACtB,CAAED,MAAO,MAAOC,MAAO,SAE3BE,SAAU,SAACF,GAAK,OA5ChB,SAACF,EAAQE,GAC7B,IAAMG,EAAa3C,EAAAA,EAAA,GAAQD,GAAU,GAAA6C,EAAA,eAAAf,OAAeS,GAAWE,IAC/D5B,EAAc+B,GA1CM,SAACA,GACrB,IAAME,EAAaxD,EAAcyD,OAC7BC,EAAUF,EAAWG,UAAYH,EAAWG,UAAUC,MAAM,KAAO,GAEvE,CAAC,UAAW,SAAU,UAAUC,SAAQ,SAAAZ,GACpC,IAAMa,EAAY,WAAHtB,OAAcS,EAAOc,eACQ,SAAxCT,EAAc,YAADd,OAAaS,IACrBS,EAAQM,SAASF,IAClBJ,EAAQO,KAAKH,GAGjBJ,EAAUA,EAAQQ,QAAO,SAAAC,GAAC,OAAIA,IAAML,CAAS,GAErD,IAEAvC,EAAc,CAAEoC,UAAWD,EAAQU,KAAK,MAC5C,CA2BIC,CAAgBf,EACpB,CAwC6CgB,CAAgBrB,EAAQE,EAAM,EACnDoB,yBAAyB,GAC3B,MAM1B,EASAlE,EACI,mBACA,oCAT2BE,GAC3B,SAACY,GAAS,OAAK,SAACC,GAAK,OACjBc,MAAAC,cAAClB,EAAkBuD,EAAA,CAACrD,UAAWA,GAAeC,GAAS,CAC1D,GACD,2BA0BJf,EACI,mCACA,sCAlB2B,SAACoE,EAAYC,EAAWhE,GACnD,IAAMiE,EAAoB,CACU,SAAhCjE,EAAWE,iBAA8B,kBAAoB,GAC9B,SAA/BF,EAAWK,gBAA6B,iBAAmB,GAC5B,SAA/BL,EAAWM,gBAA6B,iBAAmB,IAC7DkD,OAAOU,SAASR,KAAK,KAQvB,OANIO,IACAF,EAAWd,UAAYc,EAAWd,UAAS,GAAAnB,OAClCiC,EAAWd,UAAS,KAAAnB,OAAImC,GAC3BA,GAGHF,CACX,G","sources":["webpack://wp-theme-zen/webpack/bootstrap","webpack://wp-theme-zen/webpack/runtime/define property getters","webpack://wp-theme-zen/webpack/runtime/hasOwnProperty shorthand","webpack://wp-theme-zen/./js/responsive.jsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const { __ } = wp.i18n;\nconst { useSelect, useDispatch } = wp.data;\nconst { useEffect } = wp.element;\nconst { InspectorControls, useBlockProps } = wp.blockEditor;\nconst { PanelBody, SelectControl } = wp.components;\nconst { addFilter } = wp.hooks;\nconst { createHigherOrderComponent } = wp.compose;\n\n// ブロックの属性を拡張\nfunction addResponsiveAttributes(settings) {\n    if (typeof settings.attributes !== 'undefined') {\n        settings.attributes = {\n            ...settings.attributes,\n            displayOnDesktop: {\n                type: 'string',\n                default: 'show'\n            },\n            displayOnTablet: {\n                type: 'string',\n                default: 'show'\n            },\n            displayOnMobile: {\n                type: 'string',\n                default: 'show'\n            }\n        };\n    }\n    return settings;\n}\n\naddFilter(\n    'blocks.registerBlockType',\n    'my-plugin/add-responsive-attributes',\n    addResponsiveAttributes\n);\n\nconst ResponsiveControls = ({ BlockEdit, ...props }) => {\n    const { attributes, setAttributes } = props;\n\n    // クラス名を更新する関数\n    const updateClassName = (newAttributes) => {\n        const blockProps = useBlockProps.save();\n        let classes = blockProps.className ? blockProps.className.split(' ') : [];\n\n        ['Desktop', 'Tablet', 'Mobile'].forEach(device => {\n            const hideClass = `hide-on-${device.toLowerCase()}`;\n            if (newAttributes[`displayOn${device}`] === 'hide') {\n                if (!classes.includes(hideClass)) {\n                    classes.push(hideClass);\n                }\n            } else {\n                classes = classes.filter(c => c !== hideClass);\n            }\n        });\n\n        setAttributes({ className: classes.join(' ') });\n    };\n\n    // デバイスタイプの取得\n    const deviceType = useSelect(select => {\n        const { __experimentalGetPreviewDeviceType } = select('core/edit-post');\n        return __experimentalGetPreviewDeviceType ? \n            __experimentalGetPreviewDeviceType() : 'Desktop';\n    }, []);\n\n    const { __experimentalSetPreviewDeviceType: setPreviewDeviceType } = useDispatch('core/edit-post');\n\n    // デバイスタイプの変更を監視\n    useEffect(() => {\n        const unsubscribe = wp.data.subscribe(() => {\n            const newDeviceType = wp.data.select('core/edit-post').__experimentalGetPreviewDeviceType();\n            if (newDeviceType && newDeviceType !== deviceType) {\n                setPreviewDeviceType(newDeviceType);\n            }\n        });\n\n        return () => unsubscribe();\n    }, [deviceType, setPreviewDeviceType]);\n\n    // 表示設定が変更されたときの処理\n    const onChangeDisplay = (device, value) => {\n        const newAttributes = { ...attributes, [`displayOn${device}`]: value };\n        setAttributes(newAttributes);\n        updateClassName(newAttributes);\n    };\n\n    // 現在のデバイスタイプに応じたスタイル\n    const responsiveStyles = {\n        opacity: (\n            (deviceType === 'Desktop' && attributes.displayOnDesktop === 'hide') ||\n            (deviceType === 'Tablet' && attributes.displayOnTablet === 'hide') ||\n            (deviceType === 'Mobile' && attributes.displayOnMobile === 'hide')\n        ) ? 0.3 : 1\n    };\n\n    return (\n        <>\n            <div style={responsiveStyles}>\n                <BlockEdit {...props} />\n            </div>\n            \n            <InspectorControls>\n                <PanelBody\n                    title={\n                        <>\n                            <img\n                                src={`${myThemeData.themeUrl}/assets/icon.png`}\n                                alt=\"ZEN\"\n                                style={{ width: '18px', height: '18px', marginRight: '5px' }}\n                            />\n                            {__('レスポンシブ設定', 'your-textdomain')}\n                        </>\n                    }\n                    initialOpen={false}\n                >\n                    {['Desktop', 'Tablet', 'Mobile'].map(device => (\n                        <SelectControl\n                            key={device}\n                            label={`${device}で表示`}\n                            value={attributes[`displayOn${device}`] || 'show'}\n                            options={[\n                                { label: '表示', value: 'show' },\n                                { label: '非表示', value: 'hide' }\n                            ]}\n                            onChange={(value) => onChangeDisplay(device, value)}\n                            __nextHasNoMarginBottom={true}\n                        />\n                    ))}\n                </PanelBody>\n            </InspectorControls>\n        </>\n    );\n};\n\nconst withResponsiveControls = createHigherOrderComponent(\n    (BlockEdit) => (props) => (\n        <ResponsiveControls BlockEdit={BlockEdit} {...props} />\n    ),\n    'withResponsiveControls'\n);\n\naddFilter(\n    'editor.BlockEdit',\n    'my-plugin/add-responsive-controls',\n    withResponsiveControls\n);\n\n// フロントエンド用のクラス適用\nconst applyResponsiveClasses = (extraProps, blockType, attributes) => {\n    const responsiveClasses = [\n        attributes.displayOnDesktop === 'hide' ? 'hide-on-desktop' : '',\n        attributes.displayOnTablet === 'hide' ? 'hide-on-tablet' : '',\n        attributes.displayOnMobile === 'hide' ? 'hide-on-mobile' : '',\n    ].filter(Boolean).join(' ');\n\n    if (responsiveClasses) {\n        extraProps.className = extraProps.className\n            ? `${extraProps.className} ${responsiveClasses}`\n            : responsiveClasses;\n    }\n\n    return extraProps;\n};\n\naddFilter(\n    'blocks.getSaveContent.extraProps',\n    'my-plugin/apply-responsive-classes',\n    applyResponsiveClasses\n);\n\n// エクスポートを追加\nexport {\n    addResponsiveAttributes,\n    ResponsiveControls,\n    withResponsiveControls,\n    applyResponsiveClasses\n  };"],"names":["__webpack_require__","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","__","wp","i18n","_wp$data","data","useSelect","useDispatch","useEffect","element","_wp$blockEditor","blockEditor","InspectorControls","useBlockProps","_wp$components","components","PanelBody","SelectControl","addFilter","hooks","createHigherOrderComponent","compose","settings","attributes","_objectSpread","displayOnDesktop","type","default","displayOnTablet","displayOnMobile","ResponsiveControls","_ref","BlockEdit","props","_objectWithoutProperties","_excluded","setAttributes","deviceType","select","__experimentalGetPreviewDeviceType","setPreviewDeviceType","__experimentalSetPreviewDeviceType","unsubscribe","subscribe","newDeviceType","responsiveStyles","opacity","React","createElement","Fragment","style","title","src","concat","myThemeData","themeUrl","alt","width","height","marginRight","initialOpen","map","device","label","value","options","onChange","newAttributes","_defineProperty","blockProps","save","classes","className","split","forEach","hideClass","toLowerCase","includes","push","filter","c","join","updateClassName","onChangeDisplay","__nextHasNoMarginBottom","_extends","extraProps","blockType","responsiveClasses","Boolean"],"sourceRoot":""}