{"version":3,"file":"content-with.bundle.js","mappings":"qpCAAA,IAAQA,EAAOC,GAAGC,KAAVF,GACAG,EAAsBF,GAAGG,YAAzBD,kBACRE,EAAqCJ,GAAGK,WAAhCC,EAASF,EAATE,UAAWC,EAAaH,EAAbG,cACXC,EAA+BR,GAAGS,QAAlCD,2BAeRR,GAAGU,MAAMC,UACL,2BACA,qCAdJ,SAAkCC,EAAUC,GASxC,YARmC,IAAxBD,EAASE,aAChBF,EAASE,WAAaC,OAAOC,OAAOJ,EAASE,WAAY,CACrDG,aAAc,CACVC,KAAM,SACNC,QAAS,aAIdP,CACX,IAQA,IAAMQ,EAA0BZ,GAA2B,SAACa,GACxD,OAAO,SAACC,GACJ,IAAQR,EAA8BQ,EAA9BR,WAAYS,EAAkBD,EAAlBC,cAEpB,OAAOvB,GAAGwB,QAAQC,cACdzB,GAAGwB,QAAQE,SACX,KACA1B,GAAGwB,QAAQC,cAAcJ,EAAWC,GACpCtB,GAAGwB,QAAQC,cACPvB,EACA,KACAF,GAAGwB,QAAQC,cACPnB,EACA,CAAEqB,MAAO5B,EAAG,UAAW,eAAgB6B,aAAa,GACpD5B,GAAGwB,QAAQC,cAAclB,EAAe,CACpCsB,MAAO9B,EAAG,aAAc,eACxB+B,MAAOhB,EAAWG,cAAgB,SAClCc,QAAS,CACL,CAAEF,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,SAE5BE,SAAU,SAACC,GAAQ,OAAKV,EAAc,CAAEN,aAAcgB,GAAW,MAKrF,CACJ,GAAG,2BAEHjC,GAAGU,MAAMC,UACL,mBACA,uCACAS,GA2BJpB,GAAGU,MAAMC,UACL,mCACA,uCAzB2B,SAACuB,EAAYC,EAAWrB,GAoBnD,OAnBIA,EAAWG,eACqB,SAA5BH,EAAWG,aACXiB,EAAWE,MAAKC,EAAAA,EAAA,GACTH,EAAWE,OAAK,IACnBE,MAAO,QACPC,WAAY,mBACZC,YAAa,mBACbC,YAAa,mBACbC,aAAc,mBACdC,UAAW,eAGfT,EAAWE,MAAKC,EAAAA,EAAA,GACTH,EAAWE,OAAK,IACnBQ,SAAU9B,EAAWG,aACrB4B,OAAQ,YAIbX,CACX,G","sources":["webpack://wp-theme-zen/./js/content-with.js"],"sourcesContent":["const { __ } = wp.i18n;\nconst { InspectorControls } = wp.blockEditor;\nconst { PanelBody, SelectControl } = wp.components;\nconst { createHigherOrderComponent } = wp.compose;\n\n// ブロックの属性を拡張\nfunction addContentWidthAttribute(settings, name) {\n    if (typeof settings.attributes !== 'undefined') {\n        settings.attributes = Object.assign(settings.attributes, {\n            contentWidth: {\n                type: 'string',\n                default: '1100px'\n            }\n        });\n    }\n    return settings;\n}\n\nwp.hooks.addFilter(\n    'blocks.registerBlockType',\n    'my-plugin/content-width-attribute',\n    addContentWidthAttribute\n);\n\nconst withContentWidthControl = createHigherOrderComponent((BlockEdit) => {\n    return (props) => {\n        const { attributes, setAttributes } = props;\n\n        return wp.element.createElement(\n            wp.element.Fragment,\n            null,\n            wp.element.createElement(BlockEdit, props),\n            wp.element.createElement(\n                InspectorControls,\n                null,\n                wp.element.createElement(\n                    PanelBody,\n                    { title: __(\"コンテンツの幅\", \"text-domain\"), initialOpen: false },\n                    wp.element.createElement(SelectControl, {\n                        label: __(\"コンテンツの幅を選択\", \"text-domain\"),\n                        value: attributes.contentWidth || '1100px',\n                        options: [\n                            { label: '800px', value: '800px' },\n                            { label: '1100px', value: '1100px' },\n                            { label: '1400px', value: '1400px' },\n                            { label: '100%', value: '100%' },\n                        ],\n                        onChange: (newWidth) => setAttributes({ contentWidth: newWidth })\n                    })\n                )\n            )\n        );\n    };\n}, 'withContentWidthControl');\n\nwp.hooks.addFilter(\n    'editor.BlockEdit',\n    'my-plugin/with-content-width-control',\n    withContentWidthControl\n);\n\n// フロントエンド用のスタイル適用\nconst applyContentWidthStyle = (extraProps, blockType, attributes) => {\n    if (attributes.contentWidth) {\n        if (attributes.contentWidth === '100%') {\n            extraProps.style = { \n                ...extraProps.style,\n                width: '100vw',\n                marginLeft: 'calc(50% - 50vw)',\n                marginRight: 'calc(50% - 50vw)',\n                paddingLeft: 'calc(50vw - 50%)',\n                paddingRight: 'calc(50vw - 50%)',\n                boxSizing: 'border-box'\n            };\n        } else {\n            extraProps.style = { \n                ...extraProps.style, \n                maxWidth: attributes.contentWidth, \n                margin: '0 auto' \n            };\n        }\n    }\n    return extraProps;\n};\n\nwp.hooks.addFilter(\n    'blocks.getSaveContent.extraProps',\n    'my-plugin/apply-content-width-style',\n    applyContentWidthStyle\n);"],"names":["__","wp","i18n","InspectorControls","blockEditor","_wp$components","components","PanelBody","SelectControl","createHigherOrderComponent","compose","hooks","addFilter","settings","name","attributes","Object","assign","contentWidth","type","default","withContentWidthControl","BlockEdit","props","setAttributes","element","createElement","Fragment","title","initialOpen","label","value","options","onChange","newWidth","extraProps","blockType","style","_objectSpread","width","marginLeft","marginRight","paddingLeft","paddingRight","boxSizing","maxWidth","margin"],"sourceRoot":""}