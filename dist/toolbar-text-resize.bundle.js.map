{"version":3,"file":"toolbar-text-resize.bundle.js","mappings":"MAAA,IAAWA,EACDC,EACRC,EAAQC,EAAcC,EAAeC,EAC7BC,EACAC,EAJCP,EAwHRQ,OAAOR,GAvHAC,EAAkBD,EAAGS,YAArBR,cACRC,EAAkDF,EAAGU,WAA7CP,EAAYD,EAAZC,aAAcC,EAAaF,EAAbE,cAAeC,EAAQH,EAARG,SAC7BC,EAAcN,EAAGW,MAAjBL,UACAC,EAAkBP,EAAGY,QAArBL,cA+GRD,EACE,mBACA,uCA/GgCN,EAAGa,QAAQC,4BAC3C,SAACC,GACC,OAAO,SAACC,GACN,GAAmB,mBAAfA,EAAMC,KACR,OAAOV,EAAcQ,EAAWC,GAGlC,IAAME,EAAqB,SAACC,GAC1B,IAAIC,EAAeJ,EAAMK,WAAWF,WAAa,GAGjDC,EAAeA,EACZE,QAAQ,+CAAgD,IACxDC,OAGCJ,IACFC,GAAgB,IAAMD,GAGxBH,EAAMQ,cAAc,CAAEL,UAAWC,EAAaG,QAChD,EAEA,OAAOhB,EACLP,EAAGY,QAAQa,SACX,CAAC,EACDlB,EAAcQ,EAAWC,GACzBT,EACEN,EACA,CAAC,EACDM,EACEJ,EACA,CAAC,EACDI,EAAcF,EAAU,CACtBqB,aAAc,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAQF,EAARE,SAAQ,OAC/BtB,EAAcH,EAAe,CAC3B0B,KAAM,mBACNC,MAAO,UACPC,QAASH,EACT,gBAAiBD,GACjB,EACJK,cAAe,kBACb1B,EACE,MACA,CACE2B,MAAO,CACLC,QAAS,OACTC,QAAS,OACTC,cAAe,SACfC,IAAK,SAGT/B,EACEH,EACA,CACEmC,aAAa,EACbP,QAAS,kBAAMd,EAAmB,aAAa,EAC/CsB,SACExB,EAAMK,WAAWF,WACjBH,EAAMK,WAAWF,UAAUsB,SAAS,eAExC,QAEFlC,EACEH,EACA,CACEmC,aAAa,EACbP,QAAS,kBAAMd,EAAmB,GAAG,EACrCsB,WACExB,EAAMK,WAAWF,YAChBH,EAAMK,WAAWF,UAAUsB,SAAS,eACnCzB,EAAMK,WAAWF,UAAUsB,SAAS,eACpCzB,EAAMK,WAAWF,UAAUsB,SAAS,gBAG1C,QAEFlC,EACEH,EACA,CACEmC,aAAa,EACbP,QAAS,kBAAMd,EAAmB,aAAa,EAC/CsB,SACExB,EAAMK,WAAWF,WACjBH,EAAMK,WAAWF,UAAUsB,SAAS,eAExC,QAEFlC,EACEH,EACA,CACEmC,aAAa,EACbP,QAAS,kBAAMd,EAAmB,YAAY,EAC9CsB,SACExB,EAAMK,WAAWF,WACjBH,EAAMK,WAAWF,UAAUsB,SAAS,cAExC,SAEH,MAKb,CACF,GACA,6B","sources":["webpack://wp-theme-zen/./js/toolbar-text-resize.js"],"sourcesContent":["(function (wp) {\n  const { BlockControls } = wp.blockEditor;\n  const { ToolbarGroup, ToolbarButton, Dropdown } = wp.components;\n  const { addFilter } = wp.hooks;\n  const { createElement } = wp.element;\n\n  const withFontSizeToolbarButton = wp.compose.createHigherOrderComponent(\n    (BlockEdit) => {\n      return (props) => {\n        if (props.name !== \"core/paragraph\") {\n          return createElement(BlockEdit, props);\n        }\n\n        const applyFontSizeClass = (className) => {\n          let newClassName = props.attributes.className || \"\";\n\n          // `small-font`, `large-font`, `huge-font`のクラスをすべて削除\n          newClassName = newClassName\n            .replace(/\\bsmall-font\\b|\\blarge-font\\b|\\bhuge-font\\b/g, \"\")\n            .trim();\n\n          // 新しいクラスを追加\n          if (className) {\n            newClassName += \" \" + className;\n          }\n\n          props.setAttributes({ className: newClassName.trim() });\n        };\n\n        return createElement(\n          wp.element.Fragment,\n          {},\n          createElement(BlockEdit, props),\n          createElement(\n            BlockControls,\n            {},\n            createElement(\n              ToolbarGroup,\n              {},\n              createElement(Dropdown, {\n                renderToggle: ({ isOpen, onToggle }) =>\n                  createElement(ToolbarButton, {\n                    icon: \"editor-textcolor\",\n                    label: \"フォントサイズ\",\n                    onClick: onToggle,\n                    \"aria-expanded\": isOpen,\n                  }),\n                renderContent: () =>\n                  createElement(\n                    \"div\",\n                    {\n                      style: {\n                        padding: \"10px\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"10px\",\n                      },\n                    },\n                    createElement(\n                      ToolbarButton,\n                      {\n                        isSecondary: true,\n                        onClick: () => applyFontSizeClass(\"small-font\"),\n                        isActive:\n                          props.attributes.className &&\n                          props.attributes.className.includes(\"small-font\"),\n                      },\n                      \"小サイズ\"\n                    ),\n                    createElement(\n                      ToolbarButton,\n                      {\n                        isSecondary: true,\n                        onClick: () => applyFontSizeClass(\"\"),\n                        isActive: !(\n                          props.attributes.className &&\n                          (props.attributes.className.includes(\"small-font\") ||\n                            props.attributes.className.includes(\"large-font\") ||\n                            props.attributes.className.includes(\"huge-font\"))\n                        ),\n                      },\n                      \"中サイズ\"\n                    ),\n                    createElement(\n                      ToolbarButton,\n                      {\n                        isSecondary: true,\n                        onClick: () => applyFontSizeClass(\"large-font\"),\n                        isActive:\n                          props.attributes.className &&\n                          props.attributes.className.includes(\"large-font\"),\n                      },\n                      \"大サイズ\"\n                    ),\n                    createElement(\n                      ToolbarButton,\n                      {\n                        isSecondary: true,\n                        onClick: () => applyFontSizeClass(\"huge-font\"),\n                        isActive:\n                          props.attributes.className &&\n                          props.attributes.className.includes(\"huge-font\"),\n                      },\n                      \"特大サイズ\"\n                    )\n                  ),\n              })\n            )\n          )\n        );\n      };\n    },\n    \"withFontSizeToolbarButton\"\n  );\n\n  addFilter(\n    \"editor.BlockEdit\",\n    \"mytheme/add-font-size-toolbar-button\",\n    withFontSizeToolbarButton\n  );\n})(window.wp);\n"],"names":["wp","BlockControls","_wp$components","ToolbarGroup","ToolbarButton","Dropdown","addFilter","createElement","window","blockEditor","components","hooks","element","compose","createHigherOrderComponent","BlockEdit","props","name","applyFontSizeClass","className","newClassName","attributes","replace","trim","setAttributes","Fragment","renderToggle","_ref","isOpen","onToggle","icon","label","onClick","renderContent","style","padding","display","flexDirection","gap","isSecondary","isActive","includes"],"sourceRoot":""}