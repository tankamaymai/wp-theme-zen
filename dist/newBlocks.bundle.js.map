{"version":3,"file":"newBlocks.bundle.js","mappings":"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","sources":["webpack://wp-theme-zen/./src/faq-child/index.js","webpack://wp-theme-zen/./src/faq/index.js","webpack://wp-theme-zen/external window [\"wp\",\"blockEditor\"]","webpack://wp-theme-zen/external window [\"wp\",\"blocks\"]","webpack://wp-theme-zen/external window [\"wp\",\"components\"]","webpack://wp-theme-zen/external window [\"wp\",\"i18n\"]","webpack://wp-theme-zen/webpack/bootstrap","webpack://wp-theme-zen/webpack/runtime/compat get default export","webpack://wp-theme-zen/webpack/runtime/define property getters","webpack://wp-theme-zen/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useBlockProps, InnerBlocks, RichText, InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, SelectControl, RangeControl, ColorPalette } from '@wordpress/components';\n\nif (!wp.blocks.getBlockType('mytheme/faq-child')) {\n    registerBlockType('mytheme/faq-child', {\n        title: __('FAQ子ブロック', 'mytheme'),\n        description: __('FAQのアンサーブロックです', 'mytheme'),\n        category: 'zen',\n        icon: 'editor-help',\n        supports: {\n            html: false,\n            inserter: false\n        },\n        attributes: {\n            question: {\n                type: 'string',\n                source: 'html',\n                selector: '.faq-question'\n            },\n            style: {\n                type: 'string',\n                default: 'simple'\n            },\n            dividerStyle: {\n                type: 'string',\n                default: 'solid'\n            },\n            dividerColor: {\n                type: 'string',\n                default: '#cccccc'\n            },\n            dividerWidth: {\n                type: 'number',\n                default: 1\n            },\n            boxColor: {\n                type: 'string',\n                default: '#ffffff'\n            },\n            boxBorderWidth: {\n                type: 'number',\n                default: 1\n            },\n            boxBorderColor: {\n                type: 'string',\n                default: '#000000'\n            },\n            boxBorderRadius: {\n                type: 'number',\n                default: 5\n            },\n            iconStyle: {\n                type: 'string',\n                default: 'square'\n            },\n            iconSize: {\n                type: 'number',\n                default: 25\n            },\n            iconBorderWidth: {\n                type: 'number',\n                default: 1\n            },\n            iconFontSize: {\n                type: 'number',\n                default: 16\n            },\n            iconColor: {\n                type: 'string',\n                default: '#000000'\n            },\n            iconBackgroundColor: {\n                type: 'string',\n                default: '#ffffff'\n            },\n            iconBorderRadius: {\n                type: 'number',\n                default: 5\n            },\n            iconBorderColor: {\n                type: 'string',\n                default: '#000000'\n            },\n            questionBackgroundColor: {\n                type: 'string',\n                default: '#ffffff'\n            },\n            questionTextColor: {\n                type: 'string',\n                default: '#000000'\n            },\n            answerBackgroundColor: {\n                type: 'string',\n                default: '#ffffff'\n            },\n            answerTextColor: {\n                type: 'string',\n                default: '#000000'\n            }\n        },\n        edit: ({ attributes, setAttributes }) => {\n            const blockProps = useBlockProps();\n            const { style } = attributes;\n            return (\n                <>\n                    <InspectorControls>\n                        <PanelBody title={__('スタイル設定', 'mytheme')}>\n                            <SelectControl\n                                label={__('スタイル', 'mytheme')}\n                                value={style}\n                                options={[\n                                    { label: __('シンプル', 'mytheme'), value: 'simple' },\n                                    { label: __('区切り線', 'mytheme'), value: 'divider' },\n                                    { label: __('ボックス', 'mytheme'), value: 'box' },\n                                ]}\n                                onChange={(value) => setAttributes({ style: value })}\n                                __nextHasNoMarginBottom={true}\n                            />\n                            {style === 'divider' && (\n                                <>\n                                    <SelectControl\n                                        label={__('区切り線のスタイル', 'mytheme')}\n                                        value={attributes.dividerStyle}\n                                        options={[\n                                            { label: __('実線', 'mytheme'), value: 'solid' },\n                                            { label: __('点線', 'mytheme'), value: 'dotted' },\n                                            { label: __('破線', 'mytheme'), value: 'dashed' },\n                                        ]}\n                                        onChange={(value) => setAttributes({ dividerStyle: value })}\n                                        __nextHasNoMarginBottom={true}\n                                    />\n                                    <div className=\"components-base-control\">\n                                        <span>{__('区切り線の色', 'mytheme')}</span>\n                                        <ColorPalette\n                                            value={attributes.dividerColor}\n                                            onChange={(value) => setAttributes({ dividerColor: value })}\n                                            __nextHasNoMarginBottom={true}\n                                        />\n                                    </div>\n                                    <RangeControl\n                                        label={__('区切り線の太さ', 'mytheme')}\n                                        value={attributes.dividerWidth}\n                                        onChange={(value) => setAttributes({ dividerWidth: value })}\n                                        min={1}\n                                        max={10}\n                                    />\n                                </>\n                            )}\n                            {style === 'box' && (\n                                <>\n                                    <div className=\"components-base-control\">\n                                        <span>{__('ボックスの色', 'mytheme')}</span>\n                                        <ColorPalette\n                                            value={attributes.boxColor}\n                                            onChange={(value) => setAttributes({ boxColor: value })}\n                                        />\n                                    </div>\n                                    <RangeControl\n                                        label={__('ボックスの枠線の太さ', 'mytheme')}\n                                        value={attributes.boxBorderWidth}\n                                        onChange={(value) => setAttributes({ boxBorderWidth: value })}\n                                        min={0}\n                                        max={10}\n                                    />\n                                    <div className=\"components-base-control\">\n                                        <span>{__('ボックスの枠線の色', 'mytheme')}</span>\n                                        <ColorPalette\n                                            value={attributes.boxBorderColor}\n                                            onChange={(value) => setAttributes({ boxBorderColor: value })}\n                                        />\n                                    </div>\n                                    <RangeControl\n                                        label={__('ボックスの角の丸み', 'mytheme')}\n                                        value={attributes.boxBorderRadius}\n                                        onChange={(value) => setAttributes({ boxBorderRadius: value })}\n                                        min={0}\n                                        max={50}\n                                    />\n                                </>\n                            )}\n                        </PanelBody>\n                        <PanelBody title={__('アイコン設定', 'mytheme')}>\n                            <SelectControl\n                                label={__('アイコンスタイル', 'mytheme')}\n                                value={attributes.iconStyle}\n                                options={[\n                                    { label: __('四角', 'mytheme'), value: 'square' },\n                                    { label: __('丸', 'mytheme'), value: 'circle' },\n                                    { label: __('角丸', 'mytheme'), value: 'rounded' }\n                                ]}\n                                onChange={(value) => setAttributes({ iconStyle: value })}\n                                __nextHasNoMarginBottom={true}\n                            />\n                            {attributes.iconStyle === 'rounded' && (\n                                <RangeControl\n                                    label={__('アイコンの角の丸み', 'mytheme')}\n                                    value={attributes.iconBorderRadius}\n                                    onChange={(value) => setAttributes({ iconBorderRadius: value })}\n                                    min={0}\n                                    max={20}\n                                />\n                            )}\n                            <RangeControl\n                                label={__('アイコンサイズ', 'mytheme')}\n                                value={attributes.iconSize}\n                                onChange={(value) => setAttributes({ iconSize: value })}\n                                min={20}\n                                max={50}\n                            />\n                            <RangeControl\n                                label={__('アイコン枠線の太さ', 'mytheme')}\n                                value={attributes.iconBorderWidth}\n                                onChange={(value) => setAttributes({ iconBorderWidth: value })}\n                                min={0}\n                                max={5}\n                            />\n                            <RangeControl\n                                label={__('アイコンの文字サイズ', 'mytheme')}\n                                value={attributes.iconFontSize}\n                                onChange={(value) => setAttributes({ iconFontSize: value })}\n                                min={12}\n                                max={30}\n                            />\n                            <div className=\"components-base-control\">\n                                <span>{__('アイコンの色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.iconColor}\n                                    onChange={(value) => setAttributes({ iconColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('アイコンの背景色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.iconBackgroundColor}\n                                    onChange={(value) => setAttributes({ iconBackgroundColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('アイコンの枠線の色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.iconBorderColor}\n                                    onChange={(value) => setAttributes({ iconBorderColor: value })}\n                                />\n                            </div>\n                        </PanelBody>\n                        <PanelBody title={__('質問設定', 'mytheme')}>\n                            <div className=\"components-base-control\">\n                                <span>{__('背景色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.questionBackgroundColor}\n                                    onChange={(value) => setAttributes({ questionBackgroundColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('文字色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.questionTextColor}\n                                    onChange={(value) => setAttributes({ questionTextColor: value })}\n                                />\n                            </div>\n                        </PanelBody>\n                        <PanelBody title={__('回答設定', 'mytheme')}>\n                            <div className=\"components-base-control\">\n                                <span>{__('背景色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.answerBackgroundColor}\n                                    onChange={(value) => setAttributes({ answerBackgroundColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('文字色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.answerTextColor}\n                                    onChange={(value) => setAttributes({ answerTextColor: value })}\n                                />\n                            </div>\n                        </PanelBody>\n                    </InspectorControls>\n                    <div\n                        {...blockProps}\n                        className={`faq-child-block style-${style}`}\n                        style={\n                            style === 'divider'\n                                ? {\n                                    borderBottom: `${attributes.dividerWidth}px ${attributes.dividerStyle} ${attributes.dividerColor}`\n                                }\n                                : style === 'box'\n                                    ? {\n                                        backgroundColor: attributes.boxColor,\n                                        border: `${attributes.boxBorderWidth}px solid ${attributes.boxBorderColor}`,\n                                        borderRadius: `${attributes.boxBorderRadius}px`,\n                                        marginBottom: '10px'\n                                    }\n                                    : undefined\n                        }\n                    >\n                        <div className=\"faq-question-wrapper\"\n                            style={{\n                                backgroundColor: attributes.questionBackgroundColor,\n                                color: attributes.questionTextColor\n                            }}\n                        >\n                            <span\n                                className={`faq-icon ${attributes.iconStyle === 'circle' ? 'faq-icon-circle' : attributes.iconStyle === 'rounded' ? 'faq-icon-rounded' : ''}`}\n                                style={{\n                                    width: attributes.iconSize + 'px',\n                                    height: attributes.iconSize + 'px',\n                                    borderWidth: attributes.iconBorderWidth + 'px',\n                                    fontSize: attributes.iconFontSize + 'px',\n                                    color: attributes.iconColor,\n                                    backgroundColor: attributes.iconBackgroundColor,\n                                    borderColor: attributes.iconBorderColor,\n                                    borderRadius: attributes.iconStyle === 'rounded' ? `${attributes.iconBorderRadius}px` : undefined\n                                }}\n                            >\n                                Q\n                            </span>\n                            <RichText\n                                tagName=\"h4\"\n                                className=\"faq-question\"\n                                value={attributes.question}\n                                onChange={(value) => setAttributes({ question: value })}\n                                placeholder={__('質問を入力...', 'mytheme')}\n                                style={{\n                                    color: attributes.questionTextColor\n                                }}\n                            />\n                        </div>\n                        <div className=\"faq-answer-wrapper\"\n                            style={{\n                                backgroundColor: attributes.answerBackgroundColor,\n                                color: attributes.answerTextColor\n                            }}\n                        >\n                            <span\n                                className={`faq-icon ${attributes.iconStyle === 'circle' ? 'faq-icon-circle' : attributes.iconStyle === 'rounded' ? 'faq-icon-rounded' : ''}`}\n                                style={{\n                                    width: attributes.iconSize + 'px',\n                                    height: attributes.iconSize + 'px',\n                                    borderWidth: attributes.iconBorderWidth + 'px',\n                                    fontSize: attributes.iconFontSize + 'px',\n                                    color: attributes.iconColor,\n                                    backgroundColor: attributes.iconBackgroundColor,\n                                    borderColor: attributes.iconBorderColor,\n                                    borderRadius: attributes.iconStyle === 'rounded' ? `${attributes.iconBorderRadius}px` : undefined\n                                }}\n                            >\n                                A\n                            </span>\n                            <div className=\"faq-answer\">\n                                <InnerBlocks\n                                    template={[\n                                        ['core/paragraph', {\n                                            placeholder: __('回答を入力...', 'mytheme')\n                                        }]\n                                    ]}\n                                    templateLock={false}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </>\n            );\n        },\n        save: ({ attributes }) => {\n            const blockProps = useBlockProps.save();\n            const { style } = attributes;\n            return (\n                <div\n                    {...blockProps}\n                    className={`faq-block style-${style}`}\n                    style={\n                        style === 'divider'\n                            ? {\n                                borderBottom: `${attributes.dividerWidth}px ${attributes.dividerStyle} ${attributes.dividerColor}`\n                            }\n                            : style === 'box'\n                                ? {\n                                    backgroundColor: attributes.boxColor,\n                                    border: `${attributes.boxBorderWidth}px solid ${attributes.boxBorderColor}`,\n                                    borderRadius: `${attributes.boxBorderRadius}px`,\n                                    marginBottom: '10px'\n                                }\n                                : undefined\n                    }\n                >\n                    <div className=\"faq-question-wrapper\"\n                        style={{\n                            backgroundColor: attributes.questionBackgroundColor,\n                        }}\n                    >\n                        <span\n                            className={`faq-icon ${attributes.iconStyle === 'circle' ? 'faq-icon-circle' : attributes.iconStyle === 'rounded' ? 'faq-icon-rounded' : ''}`}\n                            style={{\n                                width: attributes.iconSize + 'px',\n                                height: attributes.iconSize + 'px',\n                                borderWidth: attributes.iconBorderWidth + 'px',\n                                fontSize: attributes.iconFontSize + 'px',\n                                color: attributes.iconColor,\n                                backgroundColor: attributes.iconBackgroundColor,\n                                borderColor: attributes.iconBorderColor,\n                                borderRadius: attributes.iconStyle === 'rounded' ? `${attributes.iconBorderRadius}px` : undefined\n                            }}\n                        >\n                            Q\n                        </span>\n                        <RichText.Content\n                            tagName=\"h4\"\n                            className=\"faq-question\"\n                            value={attributes.question}\n                            style={{\n                                color: attributes.questionTextColor\n                            }}\n                        />\n                    </div>\n                    <div className=\"faq-answer-wrapper\"\n    style={{\n        backgroundColor: attributes.answerBackgroundColor,\n        color: attributes.answerTextColor\n    }}\n>\n                        <span\n                            className={`faq-icon ${attributes.iconStyle === 'circle' ? 'faq-icon-circle' : attributes.iconStyle === 'rounded' ? 'faq-icon-rounded' : ''}`}\n                            style={{\n                                width: attributes.iconSize + 'px',\n                                height: attributes.iconSize + 'px',\n                                borderWidth: attributes.iconBorderWidth + 'px',\n                                fontSize: attributes.iconFontSize + 'px',\n                                color: attributes.iconColor,\n                                backgroundColor: attributes.iconBackgroundColor,\n                                borderColor: attributes.iconBorderColor,\n                                borderRadius: attributes.iconStyle === 'rounded' ? `${attributes.iconBorderRadius}px` : undefined\n                            }}\n                        >\n                            A\n                        </span>\n                        <div className=\"faq-answer\">\n                            <InnerBlocks.Content />\n                        </div>\n                    </div>\n                </div>\n            );\n        },\n    });\n}","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useBlockProps, InnerBlocks, InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, SelectControl, RangeControl, ColorPalette, Button } from '@wordpress/components';\nimport metadata from './block.json';\n\n\nif (!wp.blocks.getBlockType(metadata.name)) {\nregisterBlockType(metadata.name, {\n    ...metadata,\n    attributes: {\n        ...metadata.attributes,\n        faqItems: {\n            type: 'array',\n            default: [{ id: Date.now().toString(), question: '', content: '' }]\n        },\n        style: {\n            type: 'string',\n            default: 'simple'\n        },\n        dividerStyle: {\n            type: 'string',\n            default: 'solid'\n        },\n        dividerColor: {\n            type: 'string',\n            default: '#cccccc'\n        },\n        dividerWidth: {\n            type: 'number',\n            default: 1\n        },\n        boxColor: {\n            type: 'string',\n            default: '#ffffff'\n        },\n        boxBorderWidth: {\n            type: 'number',\n            default: 1\n        },\n        boxBorderColor: {\n            type: 'string',\n            default: '#000000'\n        },\n        boxBorderRadius: {\n            type: 'number',\n            default: 5\n        }\n    },\n    edit: ({ attributes, setAttributes, clientId }) => {\n        const blockProps = useBlockProps();\n        const { style, faqItems } = attributes;\n\n        const addFaqItem = () => {\n            const block = wp.blocks.createBlock('mytheme/faq-child', {\n                question: '',\n                answer: ''\n            });\n            const parentBlock = wp.data.select('core/block-editor').getBlock(clientId);\n            const newInnerBlocks = [...parentBlock.innerBlocks, block];\n            wp.data.dispatch('core/block-editor').replaceInnerBlocks(clientId, newInnerBlocks, false);\n        };\n\n        return (\n            <>\n              <InspectorControls>\n                        <PanelBody title={__('スタイル設定', 'mytheme')}>\n                            <SelectControl\n                                label={__('スタイル', 'mytheme')}\n                                value={style}\n                                options={[\n                                    { label: __('シンプル', 'mytheme'), value: 'simple' },\n                                    { label: __('区切り線', 'mytheme'), value: 'divider' },\n                                    { label: __('ボックス', 'mytheme'), value: 'box' },\n                                ]}\n                                onChange={(value) => setAttributes({ style: value })}\n                                __nextHasNoMarginBottom={true}\n                            />\n                            {style === 'divider' && (\n                                <>\n                                    <SelectControl\n                                        label={__('区切り線のスタイル', 'mytheme')}\n                                        value={attributes.dividerStyle}\n                                        options={[\n                                            { label: __('実線', 'mytheme'), value: 'solid' },\n                                            { label: __('点線', 'mytheme'), value: 'dotted' },\n                                            { label: __('破線', 'mytheme'), value: 'dashed' },\n                                        ]}\n                                        onChange={(value) => setAttributes({ dividerStyle: value })}\n                                        __nextHasNoMarginBottom={true}\n                                    />\n                                    <div className=\"components-base-control\">\n                                        <span>{__('区切り線の色', 'mytheme')}</span>\n                                        <ColorPalette\n                                            value={attributes.dividerColor}\n                                            onChange={(value) => setAttributes({ dividerColor: value })}\n                                            __nextHasNoMarginBottom={true}\n                                        />\n                                    </div>\n                                    <RangeControl\n                                        label={__('区切り線の太さ', 'mytheme')}\n                                        value={attributes.dividerWidth}\n                                        onChange={(value) => setAttributes({ dividerWidth: value })}\n                                        min={1}\n                                        max={10}\n                                    />\n                                </>\n                            )}\n                            {style === 'box' && (\n                                <>\n                                    <div className=\"components-base-control\">\n                                        <span>{__('ボックスの色', 'mytheme')}</span>\n                                        <ColorPalette\n                                            value={attributes.boxColor}\n                                            onChange={(value) => setAttributes({ boxColor: value })}\n                                        />\n                                    </div>\n                                    <RangeControl\n                                        label={__('ボックスの枠線の太さ', 'mytheme')}\n                                        value={attributes.boxBorderWidth}\n                                        onChange={(value) => setAttributes({ boxBorderWidth: value })}\n                                        min={0}\n                                        max={10}\n                                    />\n                                    <div className=\"components-base-control\">\n                                        <span>{__('ボックスの枠線の色', 'mytheme')}</span>\n                                        <ColorPalette\n                                            value={attributes.boxBorderColor}\n                                            onChange={(value) => setAttributes({ boxBorderColor: value })}\n                                        />\n                                    </div>\n                                    <RangeControl\n                                        label={__('ボックスの角の丸み', 'mytheme')}\n                                        value={attributes.boxBorderRadius}\n                                        onChange={(value) => setAttributes({ boxBorderRadius: value })}\n                                        min={0}\n                                        max={50}\n                                    />\n                                </>\n                            )}\n                        </PanelBody>\n                        <PanelBody title={__('アイコン設定', 'mytheme')}>\n                            <SelectControl\n                                label={__('アイコンスタイル', 'mytheme')}\n                                value={attributes.iconStyle}\n                                options={[\n                                    { label: __('四角', 'mytheme'), value: 'square' },\n                                    { label: __('丸', 'mytheme'), value: 'circle' },\n                                    { label: __('角丸', 'mytheme'), value: 'rounded' }\n                                ]}\n                                onChange={(value) => setAttributes({ iconStyle: value })}\n                                __nextHasNoMarginBottom={true}\n                            />\n                            {attributes.iconStyle === 'rounded' && (\n                                <RangeControl\n                                    label={__('アイコンの角の丸み', 'mytheme')}\n                                    value={attributes.iconBorderRadius}\n                                    onChange={(value) => setAttributes({ iconBorderRadius: value })}\n                                    min={0}\n                                    max={20}\n                                />\n                            )}\n                            <RangeControl\n                                label={__('アイコンサイズ', 'mytheme')}\n                                value={attributes.iconSize}\n                                onChange={(value) => setAttributes({ iconSize: value })}\n                                min={20}\n                                max={50}\n                            />\n                            <RangeControl\n                                label={__('アイコン枠線の太さ', 'mytheme')}\n                                value={attributes.iconBorderWidth}\n                                onChange={(value) => setAttributes({ iconBorderWidth: value })}\n                                min={0}\n                                max={5}\n                            />\n                            <RangeControl\n                                label={__('アイコンの文字サイズ', 'mytheme')}\n                                value={attributes.iconFontSize}\n                                onChange={(value) => setAttributes({ iconFontSize: value })}\n                                min={12}\n                                max={30}\n                            />\n                            <div className=\"components-base-control\">\n                                <span>{__('アイコンの色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.iconColor}\n                                    onChange={(value) => setAttributes({ iconColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('アイコンの背景色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.iconBackgroundColor}\n                                    onChange={(value) => setAttributes({ iconBackgroundColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('アイコンの枠線の色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.iconBorderColor}\n                                    onChange={(value) => setAttributes({ iconBorderColor: value })}\n                                />\n                            </div>\n                        </PanelBody>\n                        <PanelBody title={__('質問設定', 'mytheme')}>\n                            <div className=\"components-base-control\">\n                                <span>{__('背景色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.questionBackgroundColor}\n                                    onChange={(value) => setAttributes({ questionBackgroundColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('文字色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.questionTextColor}\n                                    onChange={(value) => setAttributes({ questionTextColor: value })}\n                                />\n                            </div>\n                        </PanelBody>\n                        <PanelBody title={__('回答設定', 'mytheme')}>\n                            <div className=\"components-base-control\">\n                                <span>{__('背景色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.answerBackgroundColor}\n                                    onChange={(value) => setAttributes({ answerBackgroundColor: value })}\n                                />\n                            </div>\n                            <div className=\"components-base-control\">\n                                <span>{__('文字色', 'mytheme')}</span>\n                                <ColorPalette\n                                    value={attributes.answerTextColor}\n                                    onChange={(value) => setAttributes({ answerTextColor: value })}\n                                />\n                            </div>\n                        </PanelBody>\n                    </InspectorControls>\n                <div \n                    {...blockProps} \n                    className={`faq-block style-${style}`}\n                    style={\n                        style === 'divider' \n                            ? {\n                                borderBottom: `${attributes.dividerWidth}px ${attributes.dividerStyle} ${attributes.dividerColor}`\n                            } \n                            : style === 'box' \n                            ? {\n                                backgroundColor: attributes.boxColor,\n                                border: `${attributes.boxBorderWidth}px solid ${attributes.boxBorderColor}`,\n                                borderRadius: `${attributes.boxBorderRadius}px`,\n                                marginBottom: '10px'\n                            } \n                            : undefined\n                    }\n                >\n                  <InnerBlocks\n    template={[\n        ['mytheme/faq-child', {\n            question: __('質問を入力...', 'mytheme'),\n            answer: __('回答を入力...', 'mytheme')\n        }]\n    ]}\n    templateLock={false}\n    allowedBlocks={['mytheme/faq-child']}\n    renderAppender={() => (\n        <Button\n            isPrimary\n            onClick={addFaqItem}\n            className=\"add-faq-button\"\n            icon=\"plus\"\n        >\n            {__('FAQを追加', 'mytheme')}\n        </Button>\n                        )}\n                    />\n                </div>\n            </>\n        );\n    },\n    save: ({ attributes }) => {\n        const blockProps = useBlockProps.save();\n        const { style } = attributes;\n\n        return (\n            <div \n                {...blockProps} \n                className={`faq-block style-${style}`}\n                style={\n                    style === 'divider' \n                        ? {\n                            borderBottom: `${attributes.dividerWidth}px ${attributes.dividerStyle} ${attributes.dividerColor}`\n                        } \n                        : style === 'box' \n                        ? {\n                            backgroundColor: attributes.boxColor,\n                            border: `${attributes.boxBorderWidth}px solid ${attributes.boxBorderColor}`,\n                            borderRadius: `${attributes.boxBorderRadius}px`,\n                            marginBottom: '10px'\n                        } \n                        : undefined\n                }\n            >\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n    });\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["wp","blocks","getBlockType","registerBlockType","title","__","description","category","icon","supports","html","inserter","attributes","question","type","source","selector","style","default","dividerStyle","dividerColor","dividerWidth","boxColor","boxBorderWidth","boxBorderColor","boxBorderRadius","iconStyle","iconSize","iconBorderWidth","iconFontSize","iconColor","iconBackgroundColor","iconBorderRadius","iconBorderColor","questionBackgroundColor","questionTextColor","answerBackgroundColor","answerTextColor","edit","_ref","setAttributes","blockProps","useBlockProps","React","createElement","Fragment","InspectorControls","PanelBody","SelectControl","label","value","options","onChange","__nextHasNoMarginBottom","className","ColorPalette","RangeControl","min","max","_extends","concat","borderBottom","backgroundColor","border","borderRadius","marginBottom","undefined","color","width","height","borderWidth","fontSize","borderColor","RichText","tagName","placeholder","InnerBlocks","template","templateLock","save","_ref2","Content","metadata","_objectSpread","faqItems","id","Date","now","toString","content","clientId","addFaqItem","block","createBlock","answer","parentBlock","data","select","getBlock","newInnerBlocks","innerBlocks","dispatch","replaceInnerBlocks","allowedBlocks","renderAppender","Button","isPrimary","onClick","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}